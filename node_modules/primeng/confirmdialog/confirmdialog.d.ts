import { ElementRef, OnDestroy, Renderer2, NgZone, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { Confirmation } from 'primeng/api';
import { ConfirmationService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
export declare class ConfirmDialog implements OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private confirmationService;
    zone: NgZone;
    private cd;
    header: string;
    icon: string;
    message: string;
    style: any;
    styleClass: string;
    acceptIcon: string;
    acceptLabel: string;
    acceptVisible: boolean;
    rejectIcon: string;
    rejectLabel: string;
    rejectVisible: boolean;
    acceptButtonStyleClass: string;
    rejectButtonStyleClass: string;
    closeOnEscape: boolean;
    blockScroll: boolean;
    rtl: boolean;
    closable: boolean;
    appendTo: any;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    transitionOptions: string;
    focusTrap: boolean;
    visible: any;
    position: string;
    footer: any;
    contentViewChild: ElementRef;
    confirmation: Confirmation;
    _visible: boolean;
    maskVisible: boolean;
    documentEscapeListener: any;
    container: HTMLDivElement;
    wrapper: HTMLElement;
    contentContainer: HTMLDivElement;
    subscription: Subscription;
    preWidth: number;
    _position: string;
    transformOptions: any;
    constructor(el: ElementRef, renderer: Renderer2, confirmationService: ConfirmationService, zone: NgZone, cd: ChangeDetectorRef);
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    appendContainer(): void;
    restoreAppend(): void;
    enableModality(): void;
    disableModality(): void;
    close(event: Event): void;
    hide(): void;
    moveOnTop(): void;
    getWrapperClass(): {
        'ui-widget-overlay ui-dialog-mask': boolean;
        'ui-dialog-mask-scrollblocker': boolean;
    };
    getPositionClass(): string;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    accept(): void;
    reject(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmDialog>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ConfirmDialog, "p-confirmDialog", never, {
    "acceptIcon": "acceptIcon";
    "acceptLabel": "acceptLabel";
    "acceptVisible": "acceptVisible";
    "rejectIcon": "rejectIcon";
    "rejectLabel": "rejectLabel";
    "rejectVisible": "rejectVisible";
    "closeOnEscape": "closeOnEscape";
    "blockScroll": "blockScroll";
    "closable": "closable";
    "autoZIndex": "autoZIndex";
    "baseZIndex": "baseZIndex";
    "transitionOptions": "transitionOptions";
    "focusTrap": "focusTrap";
    "message": "message";
    "icon": "icon";
    "header": "header";
    "visible": "visible";
    "position": "position";
    "style": "style";
    "styleClass": "styleClass";
    "acceptButtonStyleClass": "acceptButtonStyleClass";
    "rejectButtonStyleClass": "rejectButtonStyleClass";
    "rtl": "rtl";
    "appendTo": "appendTo";
    "key": "key";
}, {}, ["footer"]>;
}
export declare class ConfirmDialogModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ConfirmDialogModule, [typeof ConfirmDialog], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule], [typeof ConfirmDialog, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ConfirmDialogModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWRpYWxvZy5kLnRzIiwic291cmNlcyI6WyJjb25maXJtZGlhbG9nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpRUE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBOZ1pvbmUsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uU2VydmljZSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29uZmlybURpYWxvZyBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcml2YXRlIGNvbmZpcm1hdGlvblNlcnZpY2U7XG4gICAgem9uZTogTmdab25lO1xuICAgIHByaXZhdGUgY2Q7XG4gICAgaGVhZGVyOiBzdHJpbmc7XG4gICAgaWNvbjogc3RyaW5nO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBhY2NlcHRJY29uOiBzdHJpbmc7XG4gICAgYWNjZXB0TGFiZWw6IHN0cmluZztcbiAgICBhY2NlcHRWaXNpYmxlOiBib29sZWFuO1xuICAgIHJlamVjdEljb246IHN0cmluZztcbiAgICByZWplY3RMYWJlbDogc3RyaW5nO1xuICAgIHJlamVjdFZpc2libGU6IGJvb2xlYW47XG4gICAgYWNjZXB0QnV0dG9uU3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHJlamVjdEJ1dHRvblN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBjbG9zZU9uRXNjYXBlOiBib29sZWFuO1xuICAgIGJsb2NrU2Nyb2xsOiBib29sZWFuO1xuICAgIHJ0bDogYm9vbGVhbjtcbiAgICBjbG9zYWJsZTogYm9vbGVhbjtcbiAgICBhcHBlbmRUbzogYW55O1xuICAgIGtleTogc3RyaW5nO1xuICAgIGF1dG9aSW5kZXg6IGJvb2xlYW47XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHRyYW5zaXRpb25PcHRpb25zOiBzdHJpbmc7XG4gICAgZm9jdXNUcmFwOiBib29sZWFuO1xuICAgIHZpc2libGU6IGFueTtcbiAgICBwb3NpdGlvbjogc3RyaW5nO1xuICAgIGZvb3RlcjogYW55O1xuICAgIGNvbnRlbnRWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgY29uZmlybWF0aW9uOiBDb25maXJtYXRpb247XG4gICAgX3Zpc2libGU6IGJvb2xlYW47XG4gICAgbWFza1Zpc2libGU6IGJvb2xlYW47XG4gICAgZG9jdW1lbnRFc2NhcGVMaXN0ZW5lcjogYW55O1xuICAgIGNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gICAgd3JhcHBlcjogSFRNTEVsZW1lbnQ7XG4gICAgY29udGVudENvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gICAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJlV2lkdGg6IG51bWJlcjtcbiAgICBfcG9zaXRpb246IHN0cmluZztcbiAgICB0cmFuc2Zvcm1PcHRpb25zOiBhbnk7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNvbmZpcm1hdGlvblNlcnZpY2U6IENvbmZpcm1hdGlvblNlcnZpY2UsIHpvbmU6IE5nWm9uZSwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBvbkFuaW1hdGlvblN0YXJ0KGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgb25BbmltYXRpb25FbmQoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBhcHBlbmRDb250YWluZXIoKTogdm9pZDtcbiAgICByZXN0b3JlQXBwZW5kKCk6IHZvaWQ7XG4gICAgZW5hYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBkaXNhYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBjbG9zZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICBtb3ZlT25Ub3AoKTogdm9pZDtcbiAgICBnZXRXcmFwcGVyQ2xhc3MoKToge1xuICAgICAgICAndWktd2lkZ2V0LW92ZXJsYXkgdWktZGlhbG9nLW1hc2snOiBib29sZWFuO1xuICAgICAgICAndWktZGlhbG9nLW1hc2stc2Nyb2xsYmxvY2tlcic6IGJvb2xlYW47XG4gICAgfTtcbiAgICBnZXRQb3NpdGlvbkNsYXNzKCk6IHN0cmluZztcbiAgICBiaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgb25PdmVybGF5SGlkZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgYWNjZXB0KCk6IHZvaWQ7XG4gICAgcmVqZWN0KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb25maXJtRGlhbG9nTW9kdWxlIHtcbn1cbiJdfQ==