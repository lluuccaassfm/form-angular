import { ElementRef, AfterViewInit, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare const EDITOR_VALUE_ACCESSOR: any;
export declare class Editor implements AfterViewInit, ControlValueAccessor {
    el: ElementRef;
    onTextChange: EventEmitter<any>;
    onSelectionChange: EventEmitter<any>;
    toolbar: any;
    style: any;
    styleClass: string;
    placeholder: string;
    formats: string[];
    modules: any;
    bounds: any;
    scrollingContainer: any;
    debug: string;
    onInit: EventEmitter<any>;
    value: string;
    _readonly: boolean;
    onModelChange: Function;
    onModelTouched: Function;
    quill: any;
    constructor(el: ElementRef);
    ngAfterViewInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    getQuill(): any;
    readonly: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Editor>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Editor, "p-editor", never, {
    "readonly": "readonly";
    "style": "style";
    "styleClass": "styleClass";
    "placeholder": "placeholder";
    "formats": "formats";
    "modules": "modules";
    "bounds": "bounds";
    "scrollingContainer": "scrollingContainer";
    "debug": "debug";
}, {
    "onTextChange": "onTextChange";
    "onSelectionChange": "onSelectionChange";
    "onInit": "onInit";
}, ["toolbar"]>;
}
export declare class EditorModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<EditorModule, [typeof Editor], [typeof ɵngcc1.CommonModule], [typeof Editor, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<EditorModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLmQudHMiLCJzb3VyY2VzIjpbImVkaXRvci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgRURJVE9SX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBFZGl0b3IgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgb25UZXh0Q2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvblNlbGVjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdG9vbGJhcjogYW55O1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgZm9ybWF0czogc3RyaW5nW107XG4gICAgbW9kdWxlczogYW55O1xuICAgIGJvdW5kczogYW55O1xuICAgIHNjcm9sbGluZ0NvbnRhaW5lcjogYW55O1xuICAgIGRlYnVnOiBzdHJpbmc7XG4gICAgb25Jbml0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIF9yZWFkb25seTogYm9vbGVhbjtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgcXVpbGw6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBnZXRRdWlsbCgpOiBhbnk7XG4gICAgcmVhZG9ubHk6IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBFZGl0b3JNb2R1bGUge1xufVxuIl19