import { OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const RATING_VALUE_ACCESSOR: any;
export declare class Rating implements OnInit, ControlValueAccessor {
    private cd;
    disabled: boolean;
    readonly: boolean;
    stars: number;
    cancel: boolean;
    iconOnClass: string;
    iconOnStyle: any;
    iconOffClass: string;
    iconOffStyle: any;
    iconCancelClass: string;
    iconCancelStyle: any;
    onRate: EventEmitter<any>;
    onCancel: EventEmitter<any>;
    constructor(cd: ChangeDetectorRef);
    value: number;
    onModelChange: Function;
    onModelTouched: Function;
    starsArray: number[];
    ngOnInit(): void;
    rate(event: any, i: number): void;
    clear(event: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Rating>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Rating, "p-rating", never, {
    "stars": "stars";
    "cancel": "cancel";
    "iconOnClass": "iconOnClass";
    "iconOffClass": "iconOffClass";
    "iconCancelClass": "iconCancelClass";
    "disabled": "disabled";
    "readonly": "readonly";
    "iconOnStyle": "iconOnStyle";
    "iconOffStyle": "iconOffStyle";
    "iconCancelStyle": "iconCancelStyle";
}, {
    "onRate": "onRate";
    "onCancel": "onCancel";
}, never>;
}
export declare class RatingModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<RatingModule, [typeof Rating], [typeof ɵngcc1.CommonModule], [typeof Rating]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<RatingModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmF0aW5nLmQudHMiLCJzb3VyY2VzIjpbInJhdGluZy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBSQVRJTkdfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJhdGluZyBpbXBsZW1lbnRzIE9uSW5pdCwgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIHByaXZhdGUgY2Q7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHk6IGJvb2xlYW47XG4gICAgc3RhcnM6IG51bWJlcjtcbiAgICBjYW5jZWw6IGJvb2xlYW47XG4gICAgaWNvbk9uQ2xhc3M6IHN0cmluZztcbiAgICBpY29uT25TdHlsZTogYW55O1xuICAgIGljb25PZmZDbGFzczogc3RyaW5nO1xuICAgIGljb25PZmZTdHlsZTogYW55O1xuICAgIGljb25DYW5jZWxDbGFzczogc3RyaW5nO1xuICAgIGljb25DYW5jZWxTdHlsZTogYW55O1xuICAgIG9uUmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25DYW5jZWw6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgc3RhcnNBcnJheTogbnVtYmVyW107XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICByYXRlKGV2ZW50OiBhbnksIGk6IG51bWJlcik6IHZvaWQ7XG4gICAgY2xlYXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbDogYm9vbGVhbik6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBSYXRpbmdNb2R1bGUge1xufVxuIl19