import { ElementRef, AfterContentInit, OnDestroy, EventEmitter, QueryList, ChangeDetectorRef, TemplateRef } from '@angular/core';
import { Header } from 'primeng/api';
import { BlockableUI } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class AccordionTab implements OnDestroy {
    changeDetector: ChangeDetectorRef;
    header: string;
    disabled: boolean;
    cache: boolean;
    selectedChange: EventEmitter<any>;
    transitionOptions: string;
    headerFacet: QueryList<Header>;
    templates: QueryList<any>;
    private _selected;
    private _animating;
    selected: any;
    animating: boolean;
    contentTemplate: TemplateRef<any>;
    id: string;
    loaded: boolean;
    accordion: Accordion;
    constructor(accordion: any, changeDetector: ChangeDetectorRef);
    ngAfterContentInit(): void;
    toggle(event: any): boolean;
    findTabIndex(): number;
    readonly hasHeaderFacet: boolean;
    onToggleDone(event: Event): void;
    onKeydown(event: KeyboardEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AccordionTab>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AccordionTab, "p-accordionTab", never, {
    "cache": "cache";
    "transitionOptions": "transitionOptions";
    "selected": "selected";
    "header": "header";
    "disabled": "disabled";
}, {
    "selectedChange": "selectedChange";
}, ["headerFacet", "templates"]>;
}
export declare class Accordion implements BlockableUI, AfterContentInit, OnDestroy {
    el: ElementRef;
    changeDetector: ChangeDetectorRef;
    multiple: boolean;
    onClose: EventEmitter<any>;
    onOpen: EventEmitter<any>;
    style: any;
    styleClass: string;
    expandIcon: string;
    collapseIcon: string;
    tabList: QueryList<AccordionTab>;
    tabListSubscription: Subscription;
    private _activeIndex;
    tabs: AccordionTab[];
    constructor(el: ElementRef, changeDetector: ChangeDetectorRef);
    ngAfterContentInit(): void;
    initTabs(): any;
    getBlockableElement(): HTMLElement;
    activeIndex: any;
    updateSelectionState(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Accordion>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Accordion, "p-accordion", never, {
    "expandIcon": "expandIcon";
    "collapseIcon": "collapseIcon";
    "activeIndex": "activeIndex";
    "multiple": "multiple";
    "style": "style";
    "styleClass": "styleClass";
}, {
    "onClose": "onClose";
    "onOpen": "onOpen";
}, ["tabList"]>;
}
export declare class AccordionModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<AccordionModule, [typeof Accordion, typeof AccordionTab], [typeof ɵngcc1.CommonModule], [typeof Accordion, typeof AccordionTab, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<AccordionModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmQudHMiLCJzb3VyY2VzIjpbImFjY29yZGlvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBDaGFuZ2VEZXRlY3RvclJlZiwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhlYWRlciB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IEJsb2NrYWJsZVVJIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBY2NvcmRpb25UYWIgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBoZWFkZXI6IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBjYWNoZTogYm9vbGVhbjtcbiAgICBzZWxlY3RlZENoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBoZWFkZXJGYWNldDogUXVlcnlMaXN0PEhlYWRlcj47XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBwcml2YXRlIF9zZWxlY3RlZDtcbiAgICBwcml2YXRlIF9hbmltYXRpbmc7XG4gICAgc2VsZWN0ZWQ6IGFueTtcbiAgICBhbmltYXRpbmc6IGJvb2xlYW47XG4gICAgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbG9hZGVkOiBib29sZWFuO1xuICAgIGFjY29yZGlvbjogQWNjb3JkaW9uO1xuICAgIGNvbnN0cnVjdG9yKGFjY29yZGlvbjogYW55LCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIHRvZ2dsZShldmVudDogYW55KTogYm9vbGVhbjtcbiAgICBmaW5kVGFiSW5kZXgoKTogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGhhc0hlYWRlckZhY2V0OiBib29sZWFuO1xuICAgIG9uVG9nZ2xlRG9uZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uS2V5ZG93bihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFjY29yZGlvbiBpbXBsZW1lbnRzIEJsb2NrYWJsZVVJLCBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBtdWx0aXBsZTogYm9vbGVhbjtcbiAgICBvbkNsb3NlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk9wZW46IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGV4cGFuZEljb246IHN0cmluZztcbiAgICBjb2xsYXBzZUljb246IHN0cmluZztcbiAgICB0YWJMaXN0OiBRdWVyeUxpc3Q8QWNjb3JkaW9uVGFiPjtcbiAgICB0YWJMaXN0U3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBfYWN0aXZlSW5kZXg7XG4gICAgdGFiczogQWNjb3JkaW9uVGFiW107XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgaW5pdFRhYnMoKTogYW55O1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgYWN0aXZlSW5kZXg6IGFueTtcbiAgICB1cGRhdGVTZWxlY3Rpb25TdGF0ZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBY2NvcmRpb25Nb2R1bGUge1xufVxuIl19